/*
 * ta-solve
 *
 * The unnamed Tin Arm solver API
 *
 * API version: 1.0
 * Contact: api@tinarmengineering.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// Rectanglegeometry - The rectangle geometry for this job 
type Rectanglegeometry struct {

	// Length (mm)
	Length *interface{} `json:"length"`

	// Width (mm)
	Width *interface{} `json:"width"`
}

// AssertRectanglegeometryRequired checks if the required fields are not zero-ed
func AssertRectanglegeometryRequired(obj Rectanglegeometry) error {
	elements := map[string]interface{}{
		"length": obj.Length,
		"width": obj.Width,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseRectanglegeometryRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Rectanglegeometry (e.g. [][]Rectanglegeometry), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseRectanglegeometryRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRectanglegeometry, ok := obj.(Rectanglegeometry)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertRectanglegeometryRequired(aRectanglegeometry)
	})
}
